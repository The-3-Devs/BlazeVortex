name: Block Unauthorized Merges

on:
  pull_request:
    types: [closed]

jobs:
  prevent-unauthorized-merge:
    runs-on: ubuntu-latest
    if: github.event.pull_request.merged == true
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Fetch PR reviews safely
        id: check_approval
        run: |
          echo "Fetching PR reviews..."
          PR_URL="${{ github.event.pull_request.url }}"
          REVIEWS_JSON=$(curl -s -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" "${PR_URL}/reviews")

          echo "$REVIEWS_JSON" | jq empty && IS_JSON_VALID=true || IS_JSON_VALID=false

          if [ "$IS_JSON_VALID" = true ]; then
            APPROVAL_COUNT=$(echo "$REVIEWS_JSON" | jq '[.[] | select(.state == "APPROVED")] | length')
            echo "✅ Found $APPROVAL_COUNT approvals."
          else
            echo "❌ Invalid JSON fetched (maybe no permission?), treating as 0 approvals."
            APPROVAL_COUNT=0
          fi

          echo "approvals=$APPROVAL_COUNT" >> $GITHUB_ENV

      - name: Revert Unauthorized Merge
        if: env.approvals == '0'
        run: |
          echo "❌ Unauthorized merge detected! Reverting..."
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"

          git revert -m 1 ${{ github.event.pull_request.merge_commit_sha }} --no-edit
          git push origin main
